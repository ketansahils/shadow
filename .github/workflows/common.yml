name: "Poetry Application CI"

on:
  workflow_call:
    inputs:
      project-root:
        required: true
        type: string
      root-package:
        required: true
        type: string
    outputs:
      package-version:
        value: ${{ jobs.poetry-ci.outputs.package-version }}

jobs:
  poetry-ci:
    runs-on: ubuntu-latest
    outputs:
      package-version: ${{ steps.export-package-version.outputs.package-version }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Get python version
        id: read-python-version
        run: echo "python_version=$(cat .python-version)" >> $GITHUB_OUTPUT

      - name: Install python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ steps.read-python-version.outputs.python_version }}

      - name: Install poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: ${{ inputs.project-root }}/.venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('${{ inputs.project-root }}/**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        working-directory: ${{ inputs.project-root }}
        run: poetry install --no-interaction --no-root

      - name: Install project
        working-directory: ${{ inputs.project-root }}
        run: poetry install --no-interaction

      - name: Package
        working-directory: ${{ inputs.project-root }}
        run: |
          rm -rf dist
          poetry build

      - name: Export package version
        id: export-package-version
        working-directory: ${{ inputs.project-root }}
        run: |
          echo "Package version: $(poetry version --short)"
          echo "package-version=$(poetry version --short)" >> $GITHUB_OUTPUT

      - name: Upload Package
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.project-root }}_package
          path: ${{ inputs.project-root }}/dist/${{ inputs.root-package }}-*.whl
